[user]
	name = Markus Prinz
	email = markus.prinz@nuclearsquid.com


[core]
	excludesfile = ~/.gitignore
	whitespace = trailing-space,space-before-tab
	quotepath = false
	pager = less -FXR
	editor = vim -pc ':normal gg'


[alias]
	a = add
	aa = add --all
	ae = add --edit
	ai = add --interactive
	amend = commit --amend -C HEAD
	ap = add --patch
	au = add --update
	authors = "!git log --pretty=format:%aN | sort | uniq -c | sort -rn"
	b = branch -vv
	c = commit
	ca = commit --amend
	changes = diff --name-status -r
	check = diff --check
	cm = commit --message
	co = checkout
	conflicted = grep --name-only --full-name '<<<<<<< HEAD'
	cpc = cherry-pick
	create-branch = !sh -c 'git push origin HEAD:refs/heads/$1 && git fetch origin && git branch --track $1 origin/$1 && cd . && git checkout $1' -
	d = diff
	dc = diff --cached
	delete-branch = !sh -c 'git push origin :refs/heads/$1 && git remote prune origin && git branch -D $1' -
	div = divergence
	dt = difftool
	h = help
	irb = rebase --interactive
	l = "!git log --graph --pretty='tformat:%C(yellow)%h{%C(green)%ar{%C(bold blue)%an{%C(red)%d%C(reset) %s' $* | column -t -s '{' | less -FXRS"
	latest = for-each-ref --count=10 --sort=-committerdate --format='%(committerdate:short) %(refname:short)'
	lg = log --graph --pretty=format:'%Cred%h%Creset %an -%C(yellow)%d%Creset %s %Cgreen(%cr)%Creset' --abbrev-commit --date=relative
	ls-ignored = ls-files --exclude-standard --ignored --others
	m = merge -s recursive -X patience
	markdown = !BN=$(git name-rev --name-only HEAD) && git log --no-merges --grep=$BN --pretty=oneline | awk -F"$BN: " '{print \"-\", $NF}' | uniq
	mm = merge --no-ff
	merge-branch = !git checkout master && git merge @{-1}
	msg = commit --allow-empty -m
	news = log -p HEAD@{1}..HEAD@{0}
	p = cherry-pick -s
	pick = cherry-pick
	pr = !hub pull-request
	prune-remotes = "!for remote in `git remote`; do git remote prune $remote; done"
	r = remote
	ra = !git log --graph --abbrev-commit --date=relative -20 --all --pretty='format:%C(yellow)%h%Creset -%C(red)%d%Creset %s %Cgreen(%ar) %C(bold blue)<%an>%Creset'
	rb = rebase
	rba = rebase --abort
	rbc = rebase --continue
	rbs = rebase --skip
	rh = reset --hard
	ru = remote update --prune
	s = status --short --branch
	sl = shortlog
	sm = submodule
	sma = submodule add
	smu = submodule update --init
	st = stash
	stl = stash list
	stp = stash pop
	undo = reset --soft HEAD@{1}
	wd = diff --word-diff="color"
	wdc = diff --word-diff="color" --cached
	push = push --tags


[advice]
	pushNonFastForward = false
	statusHints = false


[apply]
	whitespace = nowarn


[pager]
	color = true


[branch]
	autosetupmerge = true


[color]
	ui = auto


[color "branch"]
	current = yellow reverse
	local = yellow
	remote = green

[color "diff"]
	meta = yellow bold
	frag = magenta bold
	old = red bold
	new = green bold

[color "status"]
	added = yellow
	changed = green
	untracked = cyan


[svn]
	brokenSymlinkWorkaround = false


[push]
	default = simple


[pull]
	rebase = true


[help]
	autocorrect = 0



[rerere]
	enabled = 1


[difftool "Kaleidoscope"]
	cmd = ksdiff --partial-changeset --relative-path \"$MERGED\" -- \"$LOCAL\" \"$REMOTE\"


[diff]
	renames = copies
	mnemonicprefix = true
	tool = Kaleidoscope
	algorithm = histogram


[difftool]
	prompt = false


[mergetool "Kaleidoscope"]
	cmd = ksdiff --merge --output \"$MERGED\" --base \"$BASE\" -- \"$LOCAL\" --snapshot \"$REMOTE\" --snapshot
	trustExitCode = true


[merge]
	stat = true
	diff = vimdiff
	tool = Kaleidoscope


[mergetool]
	prompt = false


[diff "zip"]
  textconv = unzip -c -a


[github]
	user = cypher


[credential]
	helper = osxkeychain


[status]
	submodulesummary = true